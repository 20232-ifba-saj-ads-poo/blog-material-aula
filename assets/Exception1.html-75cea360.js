import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as c,c as i,a as e,b as o,e as n,w as s,d}from"./app-cda17564.js";const l={},m=e("h1",{id:"exercicios-sobre-exception",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#exercicios-sobre-exception","aria-hidden":"true"},"#"),o(" Exercícios sobre Exception")],-1),p=d('<ol><li>Na classe <code>Conta</code>, modifique o método deposita(double x). Ele deve lançar uma exception chamada<br><code>IllegalArgumentException</code>, que já faz parte da biblioteca do Java, sempre que o valor passado como<br> argumento for inválido (por exemplo, quando for negativo). <ol><li>Adicione o try/catch para tratar o erro</li><li>Ao lançar a IllegalArgumentException, passe via construtor uma mensagem a ser exibida. Lembre que a String recebida como parâmetro é acessível depois via o método getMessage() herdado por todas as Exceptions</li></ol></li><li>Modificar o sistema de controle de contas correntes para lançar uma exceção de <code>SaldoInsufucienteException</code> caso o valor de saque seja maior que o saldo disponível</li></ol><h2 id="entrega" tabindex="-1"><a class="header-anchor" href="#entrega" aria-hidden="true">#</a> Entrega</h2>',2);function u(x,h){const a=t("RouterLink");return c(),i("div",null,[m,e("p",null,[o("Considerando o exercicio "),n(a,{to:"/posts/exercicios/ExercicioHeranca/Heranca4%20Banco.html"},{default:s(()=>[o("Modelagem Sistema Banco")]),_:1})]),p])}const b=r(l,[["render",u],["__file","Exception1.html.vue"]]);export{b as default};
