import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as a,d as t}from"./app-7b23504c.js";const i={},l=t('<p><strong>Critérios de Avaliação:</strong></p><ol><li><p><strong>Conceitos de Orientação a Objetos (0-10 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> O sistema demonstra a correta aplicação dos conceitos de encapsulamento, garantindo que os atributos e métodos de classes estejam apropriadamente protegidos e acessados (0-3 pontos).</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> O sistema utiliza herança de forma apropriada quando necessário, garantindo que as subclasses estendam a funcionalidade das superclasses (0-3 pontos).</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> O sistema aplica polimorfismo quando adequado, permitindo que diferentes classes compartilhem um mesmo nome de método, adaptando-o às suas necessidades específicas (0-4 pontos).</label></li></ul></li><li><p><strong>Funcionalidade (0-10 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> O sistema permite o registro eficaz de novas ordens de serviço.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> As ordens de serviço são associadas a clientes e equipamentos.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> O sistema permite o acompanhamento de ordens de serviço em diferentes estados (lançada, em atendimento, finalizada).</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> O sistema calcula automaticamente o prazo de conclusão das ordens de serviço e rastreia os atrasos.</label></li></ul></li><li><p><strong>Interface do Usuário (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> A interface do usuário é intuitiva e amigável.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> Os clientes podem inserir informações facilmente ao registrar uma ordem de serviço.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> A visualização das informações das ordens de serviço é clara e organizada.</label></li></ul></li><li><p><strong>Funcionalidades Específicas (0-10 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> O sistema permite aos clientes verificar quais ordens de serviço foram abertas para um equipamento específico (0-3 pontos).</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> O sistema permite aos clientes verificar quais ordens de serviço foram atendidas por um Técnico de Suporte específico (0-4 pontos).</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> O sistema permite aos clientes verificar quais ordens de serviço estão com o status &quot;Em atendimento&quot; e estão atrasadas (0-3 pontos).</label></li></ul></li><li><p><strong>Tratamento de Exceções e Erros (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> O sistema lida adequadamente com possíveis erros, como entradas inválidas de datas ou informações incompletas.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> O sistema fornece mensagens de erro claras e orientações para o usuário em caso de problemas.</label></li></ul></li><li><p><strong>Organização e Estrutura do Código (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> O código está bem organizado em classes, métodos e pacotes.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-16" disabled="disabled"><label class="task-list-item-label" for="task-item-16"> As classes e métodos têm nomes descritivos.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-17" disabled="disabled"><label class="task-list-item-label" for="task-item-17"> O código segue princípios de programação orientada a objetos, como encapsulamento e visibilidade apropriada.</label></li></ul></li><li><p><strong>Documentação (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-18" disabled="disabled"><label class="task-list-item-label" for="task-item-18"> O código-fonte está bem documentado, explicando o propósito e o funcionamento de classes e métodos.</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-19" disabled="disabled"><label class="task-list-item-label" for="task-item-19"> Inclui comentários claros e informativos.</label></li></ul></li><li><p><strong>Política de Acesso (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-20" disabled="disabled"><label class="task-list-item-label" for="task-item-20"> O sistema utiliza modificadores de acesso (public, private, protected) de forma consistente e apropriada para controlar a visibilidade dos membros de classe, garantindo a segurança e a integridade dos dados.</label></li></ul></li><li><p><strong>Herança (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-21" disabled="disabled"><label class="task-list-item-label" for="task-item-21"> O sistema utiliza herança de forma apropriada, permitindo a criação de classes derivadas (subclasses) que herdam características e comportamentos das classes base (superclasses) e estendem sua funcionalidade.</label></li></ul></li><li><p><strong>Polimorfismo (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-22" disabled="disabled"><label class="task-list-item-label" for="task-item-22"> O sistema aplica polimorfismo eficazmente, permitindo que objetos de diferentes classes usem o mesmo método ou interface de maneira flexível e adaptativa.</label></li></ul></li><li><p><strong>Abstração (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-23" disabled="disabled"><label class="task-list-item-label" for="task-item-23"> O sistema utiliza abstração para simplificar a complexidade, focando em características e comportamentos essenciais e ocultando detalhes desnecessários.</label></li></ul></li><li><p><strong>Associatividade (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-24" disabled="disabled"><label class="task-list-item-label" for="task-item-24"> O sistema estabelece relações entre objetos de maneira apropriada, utilizando agregação e composição, refletindo as associações do mundo real entre as entidades representadas.</label></li></ul></li><li><p><strong>Sobrecarga de Métodos (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-25" disabled="disabled"><label class="task-list-item-label" for="task-item-25"> O sistema utiliza sobrecarga de métodos, permitindo a definição de múltiplas versões de um método em uma classe com diferentes parâmetros, facilitando a flexibilidade no uso dos métodos.</label></li></ul></li><li><p><strong>Encapsulamento de Coleções (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-26" disabled="disabled"><label class="task-list-item-label" for="task-item-26"> O sistema encapsula coleções de objetos, como listas ou conjuntos, para proteger os dados e fornecer métodos para adicionar, remover e acessar elementos dessas coleções de maneira controlada.</label></li></ul></li><li><p><strong>Classes Abstratas (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-27" disabled="disabled"><label class="task-list-item-label" for="task-item-27"> O sistema inclui classes abstratas que definem métodos que devem ser implementados por classes derivadas, promovendo a consistência e a padronização no código.</label></li></ul></li><li><p><strong>Interfaces (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-28" disabled="disabled"><label class="task-list-item-label" for="task-item-28"> O sistema utiliza interfaces para definir contratos que classes devem cumprir, permitindo a implementação de múltiplas interfaces por uma única classe.</label></li></ul></li><li><p><strong>Acoplamento (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-29" disabled="disabled"><label class="task-list-item-label" for="task-item-29"> O sistema demonstra um baixo acoplamento entre classes, onde as classes são independentes e podem ser modificadas sem afetar severamente outras partes do sistema.</label></li></ul></li><li><p><strong>Política de Sobrescrita (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-30" disabled="disabled"><label class="task-list-item-label" for="task-item-30"> O sistema faz uso de sobrescrita de métodos em classes derivadas, permitindo que as subclasses forneçam implementações específicas para os métodos herdados de suas superclasses.</label></li></ul></li><li><p><strong>Composição de Objetos (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-31" disabled="disabled"><label class="task-list-item-label" for="task-item-31"> O sistema utiliza a composição de objetos, onde uma classe é composta por outras classes como atributos, permitindo a construção de objetos complexos a partir de objetos menores.</label></li></ul></li><li><p><strong>Política de Encapsulamento (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-32" disabled="disabled"><label class="task-list-item-label" for="task-item-32"> O sistema mantém um alto grau de encapsulamento, garantindo que os detalhes internos de uma classe sejam ocultos e acessados apenas por meio de métodos públicos.</label></li></ul></li><li><p><strong>Princípio da Responsabilidade Única (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-33" disabled="disabled"><label class="task-list-item-label" for="task-item-33"> O sistema segue o princípio da responsabilidade única, onde cada classe tem uma única responsabilidade, facilitando a manutenção e o entendimento do código.</label></li></ul></li><li><p><strong>Política de Herança Múltipla (0-5 pontos):</strong></p><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-34" disabled="disabled"><label class="task-list-item-label" for="task-item-34"> O sistema lida com herança múltipla, se aplicável, de maneira eficaz e gerenciável, mantendo a consistência e evitando conflitos.</label></li></ul></li></ol><p><strong>Total de Pontos: _____ / 100</strong></p>',3),o=[l];function c(d,m){return e(),a("div",null,o)}const b=s(i,[["render",c],["__file","rubrica.html.vue"]]);export{b as default};
